<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<domain name="PasswordRotationPolicyNotifications">
    <description>Password Rotation Policy Notifications</description>
    <scenarios>
        <scenario type="ConfigurePasswordExpiry">
            <description>Expire Passwords based on the last password change time</description>
            <templates>
                <template type="realtime">
                    <![CDATA[
@Plan:name('Test')
@Plan:description('ExecutionPlan for Password Expiry')

/* Stream and table Definitions ... */

@Export('org.wso2.carbon.identity.policy.password.ExpiredPasswords:1.0.0')
define stream expiredPasswordEmailNotificationsStream (tenantDomain string, userStoreDomain string, username string, email string);

@From(eventtable='analytics.table', table.name='ORG_WSO2_CARBON_IDENTITY_POLICY_PASSWORD_PASSWORDCHANGES')
define table passwordChangesTable (tenantDomain string, userStoreDomain string, username string, email string, timestamp long);

define trigger dailyTrigger at every $expiredPasswordCheckIntervalInDays days;

/* Queries */

/* Expiring passwords */

from dailyTrigger#window.length(1) join passwordChangesTable
select tenantDomain, userStoreDomain, username, email
having (dailyTrigger.triggered_time - timestamp) > $passwordExpiryInDays days
insert into expiredPasswordsTempStream;

from expiredPasswordsTempStream[(passwordChangesTable.tenantDomain == tenantDomain
								 and passwordChangesTable.userStoreDomain == userStoreDomain
								 and passwordChangesTable.username == username) in passwordChangesTable]
insert into expiredPasswordsStream;

/* Sending email notifications for expired credentials of users with emails */

from expiredPasswordsStream
select tenantDomain, userStoreDomain, username, email
having not(email is null)
insert into expiredPasswordEmailNotificationsStream;

/* Logging expired credentials of users without emails */

from expiredPasswordsStream
select tenantDomain, userStoreDomain, username, email
having email is null
insert into expiredPasswordsWithNoEmailStream;

from expiredPasswordsWithNoEmailStream#log('warn', str:concat('The credentials of the user: {username: ', username,
										   ', tenantDomain: ', tenantDomain,
										   ', userStoreDomain: ', userStoreDomain,
										   '} expired. Email notification not sent since the email was not specified.'))
select *
insert into dummyStream;

/* Updating the password changes table */

from expiredPasswordsStream
delete passwordChangesTable
	on passwordChangesTable.tenantDomain == tenantDomain
		and passwordChangesTable.userStoreDomain == userStoreDomain
		and passwordChangesTable.username == username;
                	]]>
                </template>
            </templates>
            <parameters>
                <parameter name="expiredPasswordCheckIntervalInDays" type="int">
                    <displayName>Expired password check interval in days</displayName>
                    <description>The interval between two expired password checks</description>
                    <defaultValue>1</defaultValue>
                </parameter>
                <parameter name="passwordExpiryInDays" type="int">
                    <displayName>Time to expire passwords in days</displayName>
                    <description>The time to expire passwords in days</description>
                    <defaultValue>30</defaultValue>
                </parameter>
            </parameters>
        </scenario>
    </scenarios>
</domain>